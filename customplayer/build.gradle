apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.protobuf'

android {
    //构建版本
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    //默认的配置
    defaultConfig {
        applicationId "com.testthb.customplayer"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"


        packagingOptions {
            pickFirst '**/libfontconfig.so'
            pickFirst '**/libcrypto.so'
            pickFirst '**/libavcodec.so'
            pickFirst '**/libswscale.so'
            pickFirst '**/libmp3lame.so'

            pickFirst '**/libass.so'
            pickFirst '**/libavfilter.so'
            pickFirst '**/libavformat.so'
            pickFirst '**/libavutil.so'
            pickFirst '**/libexpat.so'

            pickFirst '**/libfdk-aac.so'
            pickFirst '**/libfreetype.so'
            pickFirst '**/libfribidi.so'
            pickFirst '**/libssl.so'
            pickFirst '**/libswresample.so'

            pickFirst '**/libswscale.so'
            pickFirst '**/libx264.so'
            pickFirst '**/libyuv.so'
            pickFirst '**/libassimp.so'
            pickFirst '**/libopencv_java3.so'
            pickFirst '**/libcurl.so'
            pickFirst '**/libMathFunctions.so'
            pickFirst '**/libopus.so'
        }

        ndk {
            abiFilters "armeabi-v7a"
        }

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            proto {
                srcDir 'src/main/proto'
                include '*.proto'
            }
        }
    }



}

dependencies {
    api project(path: ':common_base')
    implementation project(path: ':avutils')
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'io.socket:socket.io-client:1.0.0'
    implementation 'org.webrtc:google-webrtc:1.0.+'
//    implementation 'com.github.yangfeng1994:FFmpeg-Android:v2.0.1'
    implementation 'com.github.AnJoiner:FFmpegCommand:1.2.2'
    implementation "com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar"
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "io.reactivex.rxjava3:rxjava:3.1.5"
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
//其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如4.0.3
    implementation "com.google.protobuf:protobuf-java:3.5.1"
    implementation 'com.google.protobuf:protoc:3.5.1'
//    api 'com.google.protobuf:protobuf-java-util:3.5.1'
    // camerax
    def camerax_version = "1.1.0-beta01"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"
}


//构建task
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}
                // Add cpp output without any option.
                // DO NOT omit the braces if you want this builtin to be added.
            }
        }
    }
    //生成目录
    generatedFilesBaseDir = "$projectDir/src/generated"
}
